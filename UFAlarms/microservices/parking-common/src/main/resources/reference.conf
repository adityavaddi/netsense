cassandra {
  parking-tag-table = "parkingtag"
  parking-tag-table = ${?cassandra_parking_tag_table}
  aggregation-type = "15min"
  parking-userdata-table="appuserdata"
  parking-userdata-table = ${?cassandra_parking_userdata_table}
  parking-policy-table = "parkingpolicy"
  parking-policy-table = ${?cassandra_parking_policy_table}
  parking-group-policy-table = "policygrouptimeline"
  parking-group-policy-table = ${?cassandra_parking_grouppolicy_table}
  parking-space-table = "space_attributes"
  parking-space-table = ${?cassandra_parking_spot_table}
  whatif-parking-tag-table = "parking_whatif_tag"
  whatif-parking-tag-table = ${?cassandra_whatif_parking_tag_table}
  whatif-parking-policy-table = "parking_whatif_policy"
  whatif-parking-policy-table = ${?cassandra_whatif_parking_policy_table}
  parking-Whatif-job-table = "parking_whatIf_analysis_job"
  parking-Whatif-job-table = ${?cassandra_parking_what_if_table}
}


akka.kafka.consumer {
  poll-interval = 20ms
  poll-timeout = 50ms
  stop-timeout = 30s
  close-timeout = 20s
  commit-timeout = 15s
  wakeup-timeout = 30s
  max-wakeups = 30
  use-dispatcher = "akka.kafka.default-dispatcher"
  kafka-clients {
    enable.auto.commit = true
  }
}

kafkaRestartableSource{
  minBackoff = 180
  minBackoff = ${?kafkaRestartableSource_minBackoff}
  maxBackoff = 900
  maxBackoff = ${?kafkaRestartableSource_maxBackoff}
  randomFactor = 0.2d
  randomFactor = ${?kafkaRestartableSource_randomFactor}
}

days.months.occurs {
  days = "mon,tue,wed,thu,fri,sat,sun"
  months = "jan,feb,mar,apr,may,jun,jul,aug,sep,oct,nov,dec"
  occurs = "once,yearly"
  reccurence = "once,daily"
  units = "hours,minutes,days"
  violations = "ppv,no-parking,max-time-exceeded"
  type-of-vehicle = "car,truck,motorcycle,bicycle,unrestricted"
  form-factor = "curb-side,surface-lot,multi-level-covered-garage"
  business-use = "loading,emergency,general"
  how-metered = "individually-metered,paystation-metered,not-metered,cloud-app"
  area-type = "cbd,residential,school,industrial,commercial,mixed"

}
