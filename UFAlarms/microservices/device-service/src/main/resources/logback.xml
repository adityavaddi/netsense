<configuration>
    <statusListener class="ch.qos.logback.core.status.NopStatusListener"/>


    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">

        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX, UTC} [%thread] %highlight(%-5level) %cyan(%logger{35}) - %msg %n</pattern>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>microservices/device-service/logs/logFile.html</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>microservices/device-service/logs/logFile.%d{yyyy-MM-dd}.%i.html</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <charset>UTF-8</charset>
            <layout class="ch.qos.logback.classic.html.HTMLLayout">
                <pattern>%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX, UTC} %thread%level%logger%line%msg</pattern>
            </layout>
        </encoder>
    </appender>
    <logger name="org.apache.kafka.clients.consumer.KafkaConsumer" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.clients.consumer.internals.Fetcher" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.clients.consumer.internals.ConsumerCoordinator"
            level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.clients.consumer.internals.AbstractCoordinator"
            level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.clients.NetworkClient" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.common.metrics.Metrics" level="INFO"/>
    <logger name="org.apache.kafka.clients.producer.KafkaProducer" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.common.network.Selector" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.clients.Metadata" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.clients.producer.internals.Sender" level="${kafka_logging_level:-INFO}"/>


    <logger name="org.apache.kafka.log.Log" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.log.TimeIndex" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.log.LogManager" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.controller.KafkaController" level="${kafka_logging_level:-INFO}"/>

    <logger name="org.apache.kafka.server.KafkaRequestHandler" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.network.Processor" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.controller.PartitionStateMachine" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.utils.KafkaScheduler" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.server.ReplicaManager" level="${kafka_logging_level:-INFO}"/>
    <logger name="org.apache.kafka.cluster.Partition" level="${kafka_logging_level:-INFO}"/>

    <logger name="org.apache.kafka.utils.ZkUtils" level="INFO"/>
    <logger name="org.apache.zookeeper.server.FinalRequestProcessor" level="INFO"/>
    <logger name="org.apache.zookeeper.ClientCnxn" level="INFO"/>
    <logger name="org.apache.zookeeper.Zookeeper" level="INFO"/>
    <logger name="org.apache.zookeeper.server.PrepRequestProcessor" level="ERROR"/>
    <logger name="org.I0Itec.zkclient.ZkClient" level="INFO"/>

    <logger name="com.outworkers.phantom" level="${cassandra_logging_level:-INFO}"/>
    <logger name="com.datastax.driver.core.Connection" level="${cassandra_logging_level:-INFO}"/>

    <logger name="com.verizon.netsense.metrics" level="${metrics_logging_level:-WARN}"/>

    <root level="${logging_level:-INFO}">
        <appender-ref ref="FILE" />
    </root>

    <root level="${logging_level:-INFO}">
        <appender-ref ref="STDOUT"/>
    </root>

</configuration>