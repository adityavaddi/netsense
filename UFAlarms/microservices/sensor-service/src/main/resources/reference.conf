
akka {
  loglevel = "ERROR"
  log-dead-letters = 10
  log-dead-letters-during-shutdown = off
  jvm-exit-on-fatal-error = true
}

cassandra {
    aggregation-type = "15min"
}

kafka {
  group-id = "ss_consumer_group"${?env_suffix}
  videonode-sensor-sample-topic = "sensor"${?env_suffix}
  corenode-sensor-sample-topic = "corenode.sensor"${?env_suffix}
  corenode-alarm-sample-topic = "corenode.alarm"${?env_suffix}
  request-topic = "ms.request.sensor"${?env_suffix}
  response-topic = "api.reply.interface"${?env_suffix}
  message-size-cutoff = "524288"
  message-size-cutoff = ${?message-size-cutoff}
  sensor-upstream-topics = "l:ambient_light"${?env_suffix}",l-i:ambient_light"${?env_suffix}",lt:driver_level"${?env_suffix}",p:presence"${?env_suffix}""

}

akka.kafka.consumer {
  poll-interval = 20ms
  poll-timeout = 50ms
  stop-timeout = 30s
  close-timeout = 20s
  commit-timeout = 15s
  wakeup-timeout = 60s
  max-wakeups = 60000
  use-dispatcher = "akka.kafka.default-dispatcher"
  kafka-clients {
    enable.auto.commit = true
  }
}

metrics {
  prefix = "sensor-service"
  prefix = ${?metrics_prefix}
}

app {
  loglimitsize=500
  loglimitsize = ${?log_limit_size}
  driverLevelTimeDifference = 3600000000
  driverLevelTimeDifference =${?driverlevel_time_difference}
  ltRetrialLimit = 2
  ltRetrialLimit = ${?lt_RetrialLimit}
  ltDelayTimeInSec = 5
  ltDelayTimeInSec = ${?lt_DelayTimeInSec}
}