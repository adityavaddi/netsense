cassandra {
  trigger-table = "business_triggers"
  trigger-table = ${?cassandra_triggers}
  aggregation-type = "15min"
}


akka.kafka.consumer {
  poll-interval = 20ms
  poll-timeout = 50ms
  stop-timeout = 30s
  close-timeout = 20s
  commit-timeout = 15s
  wakeup-timeout = 30s
  max-wakeups = 30
  use-dispatcher = "akka.kafka.default-dispatcher"
  kafka-clients {
    enable.auto.commit = true
  }
}

kafkaRestartableSource {
  minBackoff = 180
  minBackoff = ${?kafkaRestartableSource_minBackoff}
  maxBackoff = 900
  maxBackoff = ${?kafkaRestartableSource_maxBackoff}
  randomFactor = 0.2d
  randomFactor = ${?kafkaRestartableSource_randomFactor}
}

service {
  parallelism = 200
  parallelism = ${?parallelism}
}

validationkeys {
  triggerCategory = "Business Alert - Parking"
  triggerSubcategory = "group,site"
  timePeriod = "15min,1hr,1day"
  triggerVariable = "TotalRevenue,Turnover,Vacancy,Occupancy,AvgDwelltime,TotalViolationCount"
  comparisonVariable = "Turnover"
  comparisonVariableOperator = "Percentage"
  comparisonOperator = "GT,LT,EQ,GE,LE"
  severity = "Minor,Major,Critical"
  triggerCategory = ${?validation_triggerCategory}
  triggerSubcategory = ${?validation_triggerSubcategory}
  timePeriod = ${?validation_timePeriod}
  triggerVariable = ${?validation_triggerVariable}
  comparisonVariable = ${?validation_comparisonVariable}
  comparisonVariableOperator = ${?validation_comparisonVariableOperator}
  comparisonOperator = ${?validation_comparisonOperator}
  severity = ${?validation_severity}
}

akka {
  loglevel = "ERROR"
  log-dead-letters = 10
  log-dead-letters-during-shutdown = off
  jvm-exit-on-fatal-error = true
}

kafka {
  service-group-name = "kafka_business_trigger_group"${?env_suffix}
  trigger-request-topic-name = "ms.trigger.request"${?env_suffix}
  trigger-response-topic-name = "api.reply.interface"${?env_suffix}
}

metrics {
  prefix = "business-trigger-service"
  prefix = ${?metrics_prefix}
}