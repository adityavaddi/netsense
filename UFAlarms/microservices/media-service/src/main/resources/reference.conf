

akka {
  loglevel = "DEBUG"
  log-dead-letters = 10
  log-dead-letters-during-shutdown = off
  jvm-exit-on-fatal-error = true
}

kafka {
  host = "localhost"
  port = 9092
  group-id = "media_consumer_group"
  media-info-topic = "media"
  media-request-topic = "node.command"
  sic-status-topic = "sic.status"
  request-topic = "ms.request.media"
  response-topic = "api.reply.interface"
  host = ${?kafka_service}
  port = ${?kafka_port}
  group-id = ${?kafka_ms_consumer_groupid}
  media-info-topic = ${?kafka_from_device_topic}
  media-request-topic = ${?kafka_to_device_topic}
  sic-status-topic = ${?kafka_ms_sic_status_topic}
  request-topic = ${?kafka_ms_is_req_topic}
  response-topic = ${?kafka_ms_is_resp_topic}
}

akka.kafka.consumer {
  poll-interval = 20ms
  poll-timeout = 50ms
  stop-timeout = 30s
  close-timeout = 20s
  commit-timeout = 15s
  wakeup-timeout = 30s
  max-wakeups = 30
  use-dispatcher = "akka.kafka.default-dispatcher"
  kafka-clients {
    enable.auto.commit = true
  }
}

metrics-flag {
  enabled = false
  enabled = ${?metrics_enabled}
  service_instance_id = media_service
  service_instance_id = ${?media_service_instanceid}
}

akka.stream.alpakka.s3 {
  # whether the buffer request chunks (up to 5MB each) to "memory" or "disk"
  buffer = "memory"

  # location for temporary files, if buffer is set to "disk". If empty, uses the standard java temp path.
  disk-buffer-path = ""

  proxy {
    # hostname of the proxy. If undefined ("") proxy is not enabled.
    host = ""
    port = 8000

    # if "secure" is set to "true" then HTTPS will be used for all requests to S3, otherwise HTTP will be used
    secure = true
  }

  # default values for AWS configuration. If credentials and/or region are not specified when creating S3Client,
  # these values will be used.
  aws {
    access-key-id = ""
    secret-access-key = ""
    default-region = "us-west-2"
  }

  # Enable path style access to s3, i.e. "https://s3-eu-west-1.amazonaws.com/my.bucket/myobject"
  # Default is virtual-hosted style.
  # When using virtual hostedâ€“style buckets with SSL, the S3 wild card certificate only matches buckets that do not contain periods.
  # Buckets containing periods will lead to certificate errors. In those cases it's useful to enable path-style access.
  path-style-access = false
}