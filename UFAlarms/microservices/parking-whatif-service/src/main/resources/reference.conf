akka {
  loglevel = "ERROR"
  log-dead-letters = 10
  log-dead-letters-during-shutdown = off
  jvm-exit-on-fatal-error = true
}

kafka {
  whatif-group-name = "whatif-group-name"${?env_suffix}
  whatif-group-name = ${?whatif_kafka_group_id}

  sensor-sample-topic-name = "WhatIfTopic"${?env_suffix}
  spark-whatif-response-topic-name = "dw.request.whatifanalysis"${?env_suffix}
  parking-request-topic-name = "ms.parking.whatif.request"${?env_suffix}
  parking-response-topic-name = "api.reply.interface"${?env_suffix}

}


kafkaRestartableSource{
  minBackoffSource = 1
  minBackoffSource = ${?kafkaRestartableSource_minBackoff}
  maxBackoffSource = 2
  maxBackoffSource = ${?kafkaRestartableSource_maxBackoff}
  randomFactorSource = 0.2d
  randomFactorSource = ${?kafkaRestartableSource_randomFactor}
}

kafkaRestartableSink{
  minBackoffSink = 1
  minBackoffSink = ${?kafkaRestartableSink_minBackoff}
  maxBackoffSink = 5
  maxBackoffSink = ${?kafkaRestartableSink_maxBackoff}
  randomFactorSink = 0.2d
  randomFactorSink = ${?kafkaRestartableSink_randomFactor}
}

akka.kafka.consumer {
  poll-interval = 20ms
  poll-timeout = 50ms
  stop-timeout = 30s
  close-timeout = 20s
  commit-timeout = 15s
  wakeup-timeout = 30s
  max-wakeups = 30
  use-dispatcher = "akka.kafka.default-dispatcher"
  kafka-clients {
    enable.auto.commit = true
  }
}

cassandra {
  parking-Whatif-job-table = "parking_whatIf_analysis_job"
  parking-Whatif-job-table = ${?cassandra_parking_what_if_table}

  whatif-parking-policy-table = "parking_whatif_policy"
  whatif-parking-policy-table = ${?cassandra_parking-policy-table}

}

service {
  parallelism = 500
  parallelism = ${?parallelism}
  sparkCallRetrials = 2
  sparkCallRetrials = ${?sparkcall_retrials}
  sparkImplicitTimeout= 5
  sparkImplicitTimeout=${?spark_ImplicitTimeout}
}

metrics {
  prefix = "parking-whatif-service"
  prefix = ${?metrics_prefix}
}

spark {
  livy-server="http://10.2.26.50"
  livy-server=${?livy_server}
  livy-port="8998"
  livy-port=${?livy_port}
  resource-manager="http://10.2.26.50"
  resource-manager=${?resource_manager}
  resource-port="8088"
  resource-port=${?resource_port}
  class-name="com.vz.nsp.parking.whatifanalysis.starter.WhatIfAnalysisJob"
  class-name=${?class_name}
  file-name= "/user/hadoop/parking/parking-whatif-analysis.jar"
  file-name=${?file_name}
  driver-memory= "2g"
  driver-name=${?driver_memory}
  spark-name = "LivyTest"
  spark-name=${?spark_name}
  proxy-user = "hadoop"
  proxy-user=${?proxy_user}
  conf-key= "spark.scheduler.allocation.file"
  conf-key=${?conf_key}
  conf-value= "/etc/spark/conf/fairscheduler.xml"
  conf-value=${?conf_value}
  what-env-suffix=""
  what-env-suffix=${?env_suffix}
}
