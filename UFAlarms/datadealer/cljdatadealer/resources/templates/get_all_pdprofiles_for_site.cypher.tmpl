MATCH (:Site {siteid:"{{siteid}}"})-[:HAS]->(p:PDProfile)
OPTIONAL MATCH (p)-[:LINKED]->(s:SiteLightingGroup)
OPTIONAL MATCH (p)-[:LINKED]->(g:Group:LightingGroup) WHERE NOT g:SiteLightingGroup
OPTIONAL MATCH (p)-[:HAS]->(n:Node)
WITH
    COLLECT( DISTINCT
        CASE WHEN s.groupid IS NULL
        THEN NULL
        ELSE {
            groupid: s.groupid,
            name: s.name
        }
        END
    ) AS sites,

    COLLECT( DISTINCT
        CASE WHEN g.groupid IS NULL
        THEN NULL
        ELSE {
            groupid: g.groupid,
            name: g.name
        }
        END
    ) AS groups,

    COLLECT( DISTINCT
        CASE WHEN n.nodeid IS NULL
        THEN NULL
        ELSE {
            nodeid: n.nodeid,
            name: n.name
        }
        END
    ) AS nodes, p
RETURN DISTINCT {
    pdprofileid: p.pdprofileid,
    name: p.name,
    description: p.description,
    minLevel: p.minLevel,
    maxLevel: p.maxLevel,
    beginTime: p.beginTime,
    endTime: p.endTime,
    mode: coalesce(p.mode, case when p.radius is null then "no-radius" else "radius" end),
    radius: p.radius,
    detection_duration: p.detection_duration,
    sites: sites,
    groups: groups,
    nodes: nodes
} AS items
