MATCH (sch:Schedule {scheduleid:"{{scheduleid}}"})
OPTIONAL MATCH (sch)-[:HAS]->(nnw:NoNetwork)-[:BELONGS_TO]->(sch)
OPTIONAL MATCH (sch)-[:HAS]->(oldCe:CalendarEvents)
OPTIONAL MATCH (oldCe)-[:HAS]->(oldA:Action)
SET sch.name = "{{name}}", sch.description = "{{description}}"
WITH sch, oldCe, oldA, nnw
DETACH DELETE oldCe, oldA
WITH DISTINCT sch, { props } AS props, nnw
FOREACH (event IN  props.events |
    CREATE (sch)-[:HAS]->(ce:CalendarEvents {date: event.date, days: event.days, id: event.id, photocell_enabled: event.photocell_enabled, photocell_highLevel: event.photocell_highLevel, photocell_lowLevel: event.photocell_lowLevel})-[:BELONGS_TO]->(sch)
    FOREACH (action IN event.actions |
        CREATE (ce)-[:HAS]->(a:Action {time: action.time, level: action.level, id: action.id})-[:BELONGS_TO]->(ce)
    )
)
SET nnw =
CASE props.network
WHEN null
THEN {}
ELSE props.network
END
